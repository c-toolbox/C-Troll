{
  "$schema": "http://json-schema.org/draft-07/schema",

  "title": "C-Troll configuration file",
  "description": "A schema file that describes the config.json used for initializing the C-Troll application.",

  "$defs": {
    "rest": {
      "type": "object",
      "title": "REST API",
      "description": "The configuration settings for the REST API.",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username",
          "description": "The username that should be provided when making a REST request. If this value and the 'password' are not provided, anyone can use the API. Providing an empty string is the same as not providing this key."
        },
        "password": {
          "type": "string",
          "title": "Password",
          "description": "The password that should be provided when making a REST request. If this value and the 'username' are not provided, anyone can use the API. Providing an empty string is the same as not providing this key."
        },
        "port": {
          "type": "integer",
          "title": "Port",
          "description": "The port on which the REST API should listen for incoming connections",
          "exclusiveMinimum": 0,
          "exclusiveMaximum": 65536
        },
        "allowCustomPrograms": {
          "type": "boolean",
          "title": "Allow Custom Programs",
          "description": "Determines whether the REST API allows users to start arbitrary commands through the API. If this is disabled, only configured programs can be started"
        }
      }
    }
  },

  "type": "object",
  "properties": {
    "applicationPath": {
      "type": "string",
      "title": "Applications folder",
      "description": "The path to the folder where the application JSON files are located"
    },
    "clusterPath": {
      "type": "string",
      "title": "Clusters folder",
      "description": "The path to the folder where the cluster JSON files are located"
    },
    "nodePath": {
      "type": "string",
      "title": "Nodes folder",
      "description": "The path to the folder where the node JSON files are located"
    },
    "removalTimeout": {
      "type": "integer",
      "title": "Removal Timeout",
      "description": "The number of milliseconds that C-Troll waits before removing properly finished processes from the process list",
      "minimum": 0
    },
    "tagColors": {
      "type": "array",
      "title": "Tag Colors",
      "description": "Contains the storage for the custom tag colors specified by the user.",
      "items": {
        "type": "object",
        "title": "Color",
        "description": "The color for a specific tag",
        "properties": {
          "r": {
            "type": "integer",
            "title": "Red",
            "description": "The red component of the color",
            "minimum": 0,
            "maximum": 255
          },
          "g": {
            "type": "integer",
            "title": "Green",
            "description": "The green component of the color",
            "minimum": 0,
            "maximum": 255
          },
          "b": {
            "type": "integer",
            "title": "Blue",
            "description": "The blue component of the color",
            "minimum": 0,
            "maximum": 255
          },
          "tag": {
            "type": "string",
            "title": "Tag",
            "description": "The tag to which this color is associated"
          }
        },
        "required": [ "r", "g", "b" ]
      }
    },
    "logFile": {
      "type": "boolean",
      "title": "Log File",
      "description": "Determines whether C-Troll should write the log messages to a file or not"
    },
    "logRotation": {
      "type": "object",
      "title": "Log Rotation",
      "description": "Contains information about whether a log rotation should be performed and in which intervals.",
      "properties": {
        "frequency": {
          "type": "integer",
          "title": "Rotation Frequency",
          "description": "The frequency in which the log rotation should be performed, provided in hours",
          "minimum": 0
        },
        "keepPrevious": {
          "type": "boolean",
          "title": "Should keep previous file",
          "description": "Determines whether the previous log file should be kept after the rotation or deleted"
        }
      }
    },
    "showShutdownButton": {
      "type": "boolean",
      "title": "Show shut down buttons",
      "description": "If this is set to true, the cluster widgets will show the option to completely shut down the nodes in addition to restarting them."
    },
    "restLoopback": {
      "$ref": "#/$defs/rest",
      "title": "REST API for Loopback connections",
      "description": "The REST API configuration options for an endpoint that only allows connections from the same computer"
    },
    "restGeneral": {
      "$ref": "#/$defs/rest",
      "title": "REST API for all connections",
      "description": "The REST API configuration options for an endpoint that allows connections from any computer"
    }
  },
  "required": [ "applicationPath", "clusterPath", "nodePath" ]
}
